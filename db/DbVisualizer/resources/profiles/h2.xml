<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE DatabaseProfile SYSTEM "dbvis-defs.dtd">

<!--
   Copyright (c) DbVis Software AB. All Rights Reserved.
-->

<DatabaseProfile
        desc="Profile for H2"
        version="$Revision: 17463 $"
        date="$Date: 2014-04-01 12:31:27 +0200 (Tue, 01 Apr 2014) $"
        minver="9.1"
        extends="generic">

   <Commands extends="true">

      <Command id="h2.getIndexes">
         <SQL>
            <![CDATA[
SELECT
    *
FROM
    INFORMATION_SCHEMA.INDEXES
WHERE
    TABLE_SCHEMA = '${schema}'
    AND TABLE_NAME LIKE '${tableNamePattern}'
    AND NOT IS_GENERATED
ORDER BY INDEX_NAME
            ]]>
         </SQL>
      </Command>

      <Command id="h2.getSequences">
         <SQL>
            <![CDATA[
SELECT
    *
FROM
    INFORMATION_SCHEMA.SEQUENCES
WHERE
    SEQUENCE_SCHEMA = '${schema}'
    AND SEQUENCE_NAME LIKE '${sequenceName}'
ORDER BY SEQUENCE_NAME
            ]]>
         </SQL>
      </Command>

   </Commands>

   <!-- =================================================================== -->
   <!-- Definition of the object actions that are used by the tree and views -->
   <!-- =================================================================== -->

   <ObjectsActionDef extends="false">

      <ActionGroup type="Schemas">
         <Action id="h2-schemas-create" label="Create Schema" reload="true"
                 resetschemas="true" icon="add">
            <Input label="Schema Name" name="schemaName" style="text"/>
            <Command>
              <SQL><![CDATA[create schema ${schemaName}]]></SQL>
            </Command>
            <Result>
               Schema ${schemaName} created!
            </Result>
         </Action>
      </ActionGroup>

      <ActionGroup type="Schema">
         <Action id="h2-schema-drop" label="Drop Schema" reload="true"
                 resetschemas="true" icon="remove">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Command><SQL><![CDATA[drop schema "${schema}"]]></SQL></Command>
            <Confirm>
               Really drop schema ${schema}?
            </Confirm>
            <Result>
               Schema ${schema} has been dropped!
            </Result>
         </Action>
         <Action id="h2-schema-export" label="Export Schema"
                 icon="export" reload="false"
                 class="schemaExport"
                 doclink="http://www.dbvis.com/doclink/export-schema"/>
      </ActionGroup>

      <ActionGroup type="Tables">
         <Action id="h2-tables-create-table" label="Create Table"
                 icon="add" reload="true"
                 class="tableCreateOrAlter"
                 classargs="create"
                 doclink="http://www.dbvis.com/doclink/create-table"/>

         <Action id="h2-new-table-import-data" label="Import Table Data" icon="import"
                 class="tableDataImport"
                 doclink="http://www.dbvis.com/doclink/import-table"/>

      </ActionGroup>

      <ActionGroup type="Table">
         <Action id="h2-tables-alter-table" label="Alter Table"
                 icon="edit" reload="true"
                 class="tableCreateOrAlter"
                 classargs="alter"
                 doclink="http://www.dbvis.com/doclink/alter-table"/>

         <Action id="h2-table-rename" label="Rename Table" reload="true" icon="rename">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Input label="New Table Name" name="newTable" style="text"/>
            <Command>
               <SQL><![CDATA[alter table "${schema}"."${objectname}" rename to "${newTable}"]]></SQL>
            </Command>
            <Confirm>
               Confirm rename of ${schema}.${objectname} to ${newTable}?
            </Confirm>
            <Result>
               Table ${schema}.${objectname} renamed to ${newTable}!
            </Result>
         </Action>

         <Action id="h2-table-clear" label="Empty Table" reload="true">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>

            <Command>
               <SQL><![CDATA[delete from "${schema}"."${objectname}"]]></SQL>
            </Command>
            <Confirm>
               Really remove all rows in table ${schema}.${objectname}?
            </Confirm>
            <Result>
               All rows in table ${schema}.${objectname} has been removed!
            </Result>
         </Action>

         <Action id="h2-table-drop" label="Drop Table" reload="true" icon="remove">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Input label="Drop Dependent Object(s)" name="cascade" style="check"
                   tip="Automatically drop objects that depend on the table (such as views)">
               <Values>cascade</Values>
            </Input>

            <Command><SQL><![CDATA[drop table "${schema}"."${objectname}" ${cascade}]]></SQL></Command>
            <Confirm>
               Really drop table ${schema}.${objectname}?
            </Confirm>
            <Result>
               Table ${schema}.${objectname} has been dropped!
            </Result>
         </Action>

         <Action id="h2-table-import-data" label="Import Table Data" icon="import"
                 class="tableDataImport"
                 doclink="http://www.dbvis.com/doclink/import-table"/>

         <Action id="h2-table-export" label="Export Table" icon="export"
                 class="tableExport"
                 doclink="http://www.dbvis.com/doclink/export-table"/>

         <Separator/>

         <Action id="h2-table-create-index" label="Create Index" reload="true">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Input label="Index Name" name="indexname" style="text"/>
            <Input name="type" label="Type" style="radio">
               <Labels>Non-unique|Unique|Primary Key</Labels>
               <Values>|UNIQUE|PRIMARY KEY</Values>
               <Default>UNIQUE</Default>
            </Input>

            <Input label="Columns" style="separator"/>

            <Input name="columns" style="grid">
               <Arg name="output" value='"${columnname}"${_sortorder}'/>
               <Arg name="newline" value=", "/>

               <Input name="columnname" label="Column Name" style="list">
                  <Values column="4">
                     <Command idref="getColumnNamesFor">
                        <Input name="table_catalog" value="${catalog}"/>
                        <Input name="table_schema" value="${schema}"/>
                        <Input name="table_name" value="${objectname}"/>
                     </Command>
                  </Values>
                  <Default>${0}</Default>
               </Input>
               <Input name="sortorder" label="Sort Order" style="radio">
                  <Labels>ASC|DESC|Default</Labels>
                  <Values>ASC|DESC|</Values>
                  <Default>ASC</Default>
               </Input>
               <SetVar name="_sortorder" value='#sortorder.equals("") ? "" : " " + #sortorder'/>
            </Input>

            <SetVar name="_type" value='#type.equals("") ? "" : " " + #type'/>
            <SetVar name="_columns" value='#columns.trim().equals("") ? "" : "(" + #columns + ")"'/>
            <SetVar name="_indexname" value='#indexname.trim().equals("") ? "" : " \"" + #indexname + "\""'/>

            <Command>
               <SQL>
                  <![CDATA[create${_type} index${_indexname} on "${schema}"."${objectname}" ${_columns}]]>
               </SQL>
            </Command>
            <Confirm>
               <![CDATA[Create index "${indexname}"?]]>
            </Confirm>
            <Result>
               <![CDATA[Index "${indexname}" created!]]>
            </Result>
         </Action>

         <Separator/>

         <Action id="h2-table-script" label="Script Table" icon="scriptObject"
                 class="sqlBuilder"
                 classargs="script-dialog,SELECT,SELECT *,INSERT,UPDATE,DELETE,CREATE,DROP"/>

      </ActionGroup>

      <ActionGroup type="LinkedTables">
         <Action id="h2-linkedtables-create-linked-table" label="Create Linked Table" reload="true" icon="add">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Local Table Name" name="localTableName" style="text" editable="true"/>
            <Input label="Remote Table Name" name="remoteTableName" style="text"/>
            <Input label="JDBC Driver Class Name" name="className" style="text" editable="true"/>
            <Input label="JDBC URL" name="jdbcURL" style="text" editable="true"/>
            <Input label="Userid" name="userid" style="text"/>
            <Input label="Password" name="password" style="password"/>
            <Command>
               <SQL><![CDATA[create linked table "${schema}"."${localTableName}" ('${className}', '${jdbcURL}', '${userid}', '${password}', '${remoteTableName}')]]></SQL>
            </Command>
            <Confirm>
               Confirm create of linked table ${schema}.${localTableName}?
            </Confirm>
            <Result>
               Linked table ${schema}.${localTableName} created!
            </Result>
         </Action>
      </ActionGroup>

      <ActionGroup type="LinkedTable">
         <Action id="h2-linkedtable-rename" label="Rename Linked Table" reload="true" icon="rename">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Input label="New Table Name" name="newTable" style="text"/>
            <Command>
               <SQL><![CDATA[alter table "${schema}"."${objectname}" rename to "${newTable}"]]></SQL>
            </Command>
            <Confirm>
               Confirm rename of ${schema}.${objectname} to ${newTable}?
            </Confirm>
            <Result>
               Table ${schema}.${objectname} renamed to ${newTable}!
            </Result>
         </Action>

         <Action id="h2-linkedtable-clear" label="Empty Linked Table" reload="true">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>

            <Command>
               <SQL><![CDATA[delete from "${schema}"."${objectname}"]]></SQL>
            </Command>
            <Confirm>
               Really remove all rows in linked table ${schema}.${objectname}?
            </Confirm>
            <Result>
               All rows in linked table ${schema}.${objectname} has been removed!
            </Result>
         </Action>

         <Action id="h2-linkedtable-drop" label="Drop Linked Table" reload="true" icon="remove">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Table" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Command><SQL><![CDATA[drop table "${schema}"."${objectname}"]]></SQL></Command>
            <Confirm><![CDATA[
               Really drop linked table ${schema}.${objectname}?<br>
               (Only the table link will be dropped, not the remote table).
               ]]>
            </Confirm>
            <Result>
               Linked table ${schema}.${objectname} has been dropped!
            </Result>
         </Action>

         <Action id="h2-linkedtable-import-data" label="Import Table Data" icon="import"
                 class="tableDataImport"
                 doclink="http://www.dbvis.com/doclink/import-table"/>

         <Action id="h2-linkedtable-export" label="Export Table" icon="export"
                 class="tableExport"
                 doclink="http://www.dbvis.com/doclink/export-table"/>

         <Separator/>

         <Action id="h2-linkedtable-script" label="Script Linked Table" icon="scriptObject"
                 class="sqlBuilder"
                 classargs="script-dialog,SELECT,SELECT *,INSERT,UPDATE,DELETE"/>

      </ActionGroup>

      <ActionGroup type="View">
         <Action id="h2-view-drop" label="Drop View" reload="true" icon="remove">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="View" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Command><SQL><![CDATA[drop view "${schema}"."${objectname}"]]></SQL></Command>
            <Confirm>
               Really drop view ${schema}.${objectname}?
            </Confirm>
            <Result>
               View ${schema}.${objectname} has been dropped!
            </Result>
         </Action>

         <Action id="h2-view-export" label="Export View" icon="export"
                 class="viewExport"
                 doclink="http://www.dbvis.com/doclink/export-view"/>

         <Separator/>

         <Action id="h2-view-script" label="Script View" icon="scriptObject"
                 class="sqlBuilder"
                 classargs="script-dialog,SELECT,SELECT *,INSERT,UPDATE,DELETE,CREATE,DROP"/>

      </ActionGroup>

      <ActionGroup type="Index">
         <Action id="h2-index-drop" label="Drop Index" reload="true" icon="remove">
            <Input label="Index" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Command><SQL><![CDATA[drop index "${objectname}"]]></SQL></Command>
            <Confirm>
               Really drop index ${objectname}?
            </Confirm>
            <Result>
               Index ${objectname} dropped!
            </Result>
         </Action>
      </ActionGroup>

      <ActionGroup type="Sequences">
         <Action id="h2-sequences-create" label="Create Sequence" reload="true" icon="add">
            <Input label="Schema" name="_schema" style="list">
               <Values>
                  <Command>
                     <SQL>
            <![CDATA[SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA ORDER BY SCHEMA_NAME]]></SQL>
                  </Command>
               </Values>
               <Default>${schema}</Default>
            </Input>
            <Input label="Sequence Name" name="sequenceName" style="text"/>
            <Input label="Start With" name="startWith" style="text">
               <Default>1</Default>
            </Input>
            <Input label="Increment By" name="increment" style="text">
               <Default>1</Default>
            </Input>
            <Command>
               <SQL>
                  <![CDATA[
 create sequence "${_schema}"."${sequenceName}"
   start with ${startWith}
   increment by ${increment}]]>
                </SQL>
            </Command>
            <Result>
               Sequence ${schema}.${sequenceName} created!
            </Result>
         </Action>
      </ActionGroup>

      <ActionGroup type="Sequence">
         <Action id="h2-sequence-drop" label="Drop Sequence" reload="true" icon="remove">
            <Input label="Schema" style="text" editable="false">
               <Default>${schema}</Default>
            </Input>
            <Input label="Sequence" style="text" editable="false">
               <Default>${objectname}</Default>
            </Input>
            <Command>
               <SQL><![CDATA[drop sequence "${schema}"."${objectname}"]]></SQL>
            </Command>
            <Confirm>
               Really drop sequence ${schema}.${objectname}?
            </Confirm>
            <Result>
               Sequence ${schema}.${objectname} dropped!
            </Result>
         </Action>
      </ActionGroup>

   </ObjectsActionDef>

   <!-- =================================================================== -->
   <!-- Definition of the database objects tree structure -->
   <!-- =================================================================== -->

   <ObjectsTreeDef extends="false">

      <GroupNode type="Schemas" label="Schemas">
         <DataNode type="Schema" label="${getSchemas.TABLE_SCHEM}">
            <SetVar name="schema" value="${getSchemas.TABLE_SCHEM}"/>
            <Command idref="getSchemas">
               <Filter type="Schema" name="Schema">
                  <Column index="TABLE_SCHEM" name="Name"/>
               </Filter>
            </Command>

            <GroupNode type="Tables" label="Tables">
               <DataNode type="Table" label="${getTables.TABLE_NAME}">
                  <SetVar name="objectname" value="${getTables.TABLE_NAME}"/>
                  <SetVar name="rowcount" value="true"/>
                  <SetVar name="acceptInQB" value="true"/>
                  <Command idref="getTables">
                     <Input name="schema" value="${schema}"/>
                     <Input name="tableType" value="SYSTEM TABLE, TABLE"/>
                     <Filter type="Table" name="Table">
                        <Column index="TABLE_NAME" name="Name"/>
                     </Filter>
                  </Command>

                  <!-- Need to keep the objectname for the current table in
                       a new variable so that the viewers will be able to pick up
                       the correct input to display -->
                  <SetVar name="theTableName" value="${objectname}"/>

                  <GroupNode type="Columns" label="Columns">
                     <DataNode type="Column" label="${getColumns.COLUMN_NAME}   (${getColumns.TYPE_NAME})" isLeaf="true">
                        <SetVar name="objectname" value="${getColumns.COLUMN_NAME}"/>
                        <Command idref="getColumns">
                           <Input name="schema" value="${schema}"/>
                           <Input name="objectname" value="${theTableName}"/>
                        </Command>
                     </DataNode>
                  </GroupNode>

                  <GroupNode type="Indexes" label="Indexes">
                     <DataNode type="Index" label="${h2.getIndexes.INDEX_NAME}   (${h2.getIndexes.TABLE_SCHEMA}.${h2.getIndexes.TABLE_NAME})" isLeaf="true">
                        <SetVar name="objectname" value="${h2.getIndexes.INDEX_NAME}"/>
                        <Command idref="h2.getIndexes">
                           <Input name="schema" value="${schema}"/>
                           <Input name="tableNamePattern" value="${theTableName}"/>
                        </Command>
                     </DataNode>
                  </GroupNode>
               </DataNode>
            </GroupNode>

            <GroupNode type="LinkedTables" label="Linked Tables">
               <DataNode type="LinkedTable" label="${getTables.TABLE_NAME}">
                  <SetVar name="objectname" value="${getTables.TABLE_NAME}"/>
                  <SetVar name="rowcount" value="true"/>
                  <SetVar name="acceptInQB" value="true"/>
                  <Command idref="getTables">
                     <Input name="schema" value="${schema}"/>
                     <Input name="tableType" value="TABLE LINK"/>
                     <Filter type="Table" name="Table">
                        <Column index="TABLE_NAME" name="Name"/>
                     </Filter>
                  </Command>

                  <!-- Need to keep the objectname for the current table in
                       a new variable so that the viewers will be able to pick up
                       the correct input to display -->
                  <SetVar name="theTableName" value="${objectname}"/>

                  <GroupNode type="Columns" label="Columns">
                     <DataNode type="Column" label="${getColumns.COLUMN_NAME}   (${getColumns.TYPE_NAME})" isLeaf="true">
                        <SetVar name="objectname" value="${getColumns.COLUMN_NAME}"/>
                        <Command idref="getColumns">
                           <Input name="schema" value="${schema}"/>
                           <Input name="objectname" value="${theTableName}"/>
                        </Command>
                     </DataNode>
                  </GroupNode>
               </DataNode>
            </GroupNode>

            <GroupNode type="Views" label="Views">
               <DataNode type="View" label="${getTables.TABLE_NAME}" isLeaf="true">
                  <SetVar name="objectname" value="${getTables.TABLE_NAME}"/>
                  <SetVar name="rowcount" value="true"/>
                  <SetVar name="acceptInQB" value="true"/>
                  <Command idref="getTables">
                     <Input name="schema" value="${schema}"/>
                     <Input name="tableType" value="SYSTEM VIEW, VIEW"/>
                     <Filter type="View" name="View">
                        <Column index="TABLE_NAME" name="Name"/>
                     </Filter>
                  </Command>
               </DataNode>
            </GroupNode>

            <SetVar name="theTableName" value="%"/>

            <GroupNode type="Indexes" label="Indexes">
               <DataNode type="Index" label="${h2.getIndexes.INDEX_NAME}   (${h2.getIndexes.TABLE_SCHEMA}.${h2.getIndexes.TABLE_NAME})" isLeaf="true">
                  <SetVar name="objectname" value="${h2.getIndexes.INDEX_NAME}"/>
                  <Command idref="h2.getIndexes">
                     <Input name="schema" value="${schema}"/>
                     <Input name="tableNamePattern" value="%"/>
                  </Command>
               </DataNode>
            </GroupNode>

            <GroupNode type="Sequences" label="Sequences">
               <DataNode type="Sequence" label="${h2.getSequences.SEQUENCE_NAME}" isLeaf="true">
                  <SetVar name="objectname" value="${h2.getSequences.SEQUENCE_NAME}"/>
                  <Command idref="h2.getSequences">
                     <Input name="schema" value="${schema}"/>
                     <Input name="sequenceName" value="%"/>
                     <Filter type="Sequence" name="Sequence">
                        <Column index="SEQUENCE_NAME" name="Name"/>
                     </Filter>
                  </Command>
               </DataNode>
            </GroupNode>
         </DataNode>
      </GroupNode>

   </ObjectsTreeDef>

   <!-- =================================================================== -->
   <!-- Definition of the database objects views -->
   <!-- =================================================================== -->

   <ObjectsViewDef extends="true">

      <ObjectView type="Schemas">
         <DataView id="generic-schemas-schemas" action="drop"/>

         <DataView id="h2-schemas-schemas" icon="Schemas" label="Schemas" viewer="grid">
            <Command idref="getSchemas"/>
         </DataView>
      </ObjectView>
      
      <ObjectView type="Schema">
         <DataView id="generic-schema-tables" action="drop"/>
         <DataView id="generic-schema-references" action="drop"/>
      </ObjectView>

      <ObjectView type="Tables">
         <DataView id="generic-tables-tables" action="drop"/>

         <DataView id="h2-tables-tables" icon="Tables" label="Tables" viewer="grid">
            <Input name="menuItem" value="Open in New Tab...">
               <Input name="action" value="open-object-in-new-tab-command ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Open in Floating Tab...">
               <Input name="action" value="open-object-in-floating-tab-command ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Script: SELECT ALL">
               <Input name="command" value="select * from ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
             </Input>
             <Input name="menuItem" value="Script: DROP TABLE">
                <Input name="command" value="drop table ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
             </Input>

            <Command idref="getTables">
               <Input name="schema" value="${schema}"/>
               <Input name="tableType" value="SYSTEM TABLE, TABLE"/>
            </Command>
         </DataView>
      </ObjectView>

      <ObjectView type="Table">
         <DataView id="h2-table-ddl" icon="Source" label="DDL" viewer="ddl">
            <Input name="formatSQL" value="true"/>
         </DataView>
      </ObjectView>

      <ObjectView type="LinkedTables">
         <DataView id="h2-linkedtables-tables" icon="Tables" label="Tables" viewer="grid">
            <Input name="menuItem" value="Open in New Tab...">
               <Input name="action" value="open-object-in-new-tab-command ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Open in Floating Tab...">
               <Input name="action" value="open-object-in-floating-tab-command ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Script: SELECT ALL">
               <Input name="command" value="select * from ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Script: DROP TABLE">
               <Input name="command" value="drop table ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>

            <Command idref="getTables">
               <Input name="schema" value="${schema}"/>
               <Input name="tableType" value="TABLE LINK"/>
            </Command>
         </DataView>
      </ObjectView>

      <ObjectView type="LinkedTable">
         <DataView id="h2-linkedtable-info" icon="Info" label="Info" viewer="node-form"/>
         <DataView id="h2-linkedtable-columns" icon="Columns" label="Columns" viewer="grid">
            <Command idref="getColumns">
               <Input name="catalog" value="${catalog}"/>
               <Input name="schema" value="${schema}"/>
               <Input name="objectname" value="${objectname}"/>
            </Command>
         </DataView>
         <DataView id="h2-linkedtable-data" icon="Data" label="Data" viewer="table-data"/>
         <DataView id="h2-linkedtable-rowcount" icon="RowCount" label="Row Count" viewer="table-rowcount"/>
      </ObjectView>

      <ObjectView type="Views">
         <DataView id="h2-views-views" icon="Views" label="Views" viewer="grid">
            <Input name="menuItem" value="Open in New Tab...">
               <Input name="action" value="open-object-in-new-tab-command ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Open in Floating Tab...">
               <Input name="action" value="open-object-in-floating-tab-command ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Script: SELECT ALL">
               <Input name="command" value="select * from ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>
            <Input name="menuItem" value="Script: DROP VIEW">
               <Input name="command" value="drop view ${schema||TABLE_SCHEMA}${object||TABLE_NAME}"/>
            </Input>

            <Command idref="getTables">
               <Input name="schema" value="${schema}"/>
               <Input name="tableType" value="SYSTEM VIEW, VIEW"/>
            </Command>
         </DataView>
      </ObjectView>

      <ObjectView type="View">
         <DataView id="h2-view-info" icon="Info" label="Info" viewer="node-form"/>
         <DataView id="h2-view-data" icon="Data" label="Data" viewer="table-data"/>
         <DataView id="h2-view-rowcount" icon="RowCount" label="Row Count" viewer="table-rowcount"/>
         <DataView id="h2-view-ddl" icon="Source" label="DDL" viewer="ddl">
            <Input name="objectType" value="View"/>
            <Input name="formatSQL" value="true"/>
         </DataView>
      </ObjectView>

      <ObjectView type="Indexes">
         <DataView id="generic-indexes-indexes" action="drop"/>

         <DataView id="h2-indexes-indexes" icon="Indexes" label="Indexes" viewer="grid">
            <Command idref="h2.getIndexes">
               <Input name="schema" value="${schema}"/>
               <Input name="tableNamePattern" value="${theTableName}"/>
            </Command>
         </DataView>
      </ObjectView>

      <ObjectView type="Index">
         <DataView id="generic-index-index" action="drop"/>

         <DataView id="h2-index-index" icon="Index" label="Index" viewer="node-form"/>
         <DataView id="h2-index-ddl" icon="Source" label="DDL" viewer="ddl">
            <Input name="objectType" value="Index"/>
            <Input name="formatSQL" value="true"/>
         </DataView>
      </ObjectView>

      <ObjectView type="Sequences">
         <DataView id="h2-sequences-sequences" icon="Sequences" label="Sequences" viewer="grid">
            <Command idref="h2.getSequences">
               <Input name="schema" value="${schema}"/>
               <Input name="sequenceName" value="%"/>
            </Command>
         </DataView>
      </ObjectView>

      <ObjectView type="Sequence">
         <DataView id="h2-sequence-info" icon="Info" label="Info" viewer="form">
            <Command idref="h2.getSequences">
               <Input name="schema" value="${schema}"/>
               <Input name="sequenceName" value="${objectname}"/>
            </Command>
         </DataView>
      </ObjectView>

   </ObjectsViewDef>

</DatabaseProfile>
