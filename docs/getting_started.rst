.. _getting_started:


******************************************
Getting Started
******************************************

Stem is a powerful library written in Python to perform various operations against TOR Clients and Directory Authorities. The information gathered using Stem could be very useful to an attacker to gather information about the relays available in the TOR network.
Tortazo is an open source Python Script to gather information about ExitNodes in the TOR Network, perform bruteforce attacks against services like FTP or SSH and create a Botnet with the compromised ExitNodes over SSH among a long list of interesting features.

.. _dependencies-label:

=================
Dependencies
=================
To use Tortazo, you can use the lastest stable relase binary located in "bin" directory. 
However, if you want to use the develpment version located in the GIT repository you'll need the following dependencies:

* Paramiko: https://github.com/paramiko/paramiko
* Python-Nmap http://xael.org/norman/python/python-nmap/
* Python-shodan: https://github.com/achillean/shodan-python
* Stem: https://stem.torproject.org/
* Plumbum: https://pypi.python.org/pypi/plumbum
* Fabric: http://docs.fabfile.org/en/1.8/
* Requests: https://pypi.python.org/pypi/requests
* IPython: http://ipython.org/
* PrettyTable: https://pypi.python.org/pypi/PrettyTable
* pynessus-rest: https://github.com/Adastra-thw/pynessus-rest
* PySNMP: http://pysnmp.sourceforge.net/
* topia.termextract: https://pypi.python.org/pypi/topia.termextract/
* Jinja2: http://jinja.pocoo.org/docs/intro/
* BeautifulSoup: http://www.crummy.com/software/BeautifulSoup/
* Scrapy: http://scrapy.org/

=================
Other Dependencies    
=================
Among the Python libraries needed to use Tortazo, you'll need some tools to use plugins or some execution modes in Tortazo.

* Nmap: Mandatory dependency in Gather Information mode. http://nmap.org/
* Nessus: Mandatory dependency to use Nessus from Tortazo. (NessusPlugin). http://www.tenable.com/products/nessus/
* Metasploit Framework: Mandatory dependency to use Metasploit Framework from Tortazo (MetasploitPlugin). http://www.metasploit.com/
* Nikto: Mandatory dependency to use Nikto from Tortazo (NiktoPlugin). http://www.cirt.net/Nikto2/
* Nexpose: Mandatory dependency to use Nexpose from Tortazo (NexposePlugin). https://www.rapid7.com/products/nexpose/


.. _execution-modes-label:

=================
Use Tortazo: Execution Modes
=================
There are three execution modes in the current version of Tortazo, each of this allows gathering information from the TOR network and performing attacks against relays and hidden services. The execution modes are the following.


Gathering Information
=============================
This is the most basic execution mode, which will download the descriptors from the latest consensus generated by the TOR directory authorities and then allows applying some filters on the information downloaded. Finally, launches an Nmap scan against the data filtered identifying open ports and a lot of details about the target, you can use every option included in Nmap scanner, including the Scripting Engine (NSE). The results will be stored in the local database of Tortazo and if you run Tortazo multiple times in this mode, more information you’ll get stored in database. The larger samples of data have more chances of getting positive results against any of the relays registered, so it’s recommended to run Tortazo multiple times.
Read more about gather information in Tortazo :ref:`gathering-information-label`

Botnet Mode
=============================
This mode is used to execute commands over a set of SSH servers compromised using the bruterPlugin. As you can see in :file:`available_plugins.rst` bruterPlugin is used to execute dictionary attacks against multiple services in relays or hidden services. If the dictionary attack against a target is successful, the plugin will write the details of the compromised server in the file "<TORTAZO_DIR>/tortazo_botnet.bot". In this mode, Tortazo will read this to create the bots in the context of the botnet. You can run parallel commands against the entirely botnet or exclude bots to run the commands just over some few machines. 
Read more about Botnet mode in Tortazo :ref:`botnet-mode-label`


Database Mode
=============================
If you have enough information in your database, you can use it to perform direct attacks using some of the available plugins in Tortazo. In this mode, there are no connections to the TOR directory authorities to gather information about the relays that conforms the network, instead of, Tortazo will use the information stored in database.
Read more about Database mode in Tortazo :ref:`database-mode-label`


=================
Plugins management
=================
The plugins in Tortazo are the best way to integrate external routines written in Python directly in the framework, allowing to any Python developer to write his own tools to perform audits against hidden services and TOR relays. There are various plugins already developed which integrates tools like Nessus, W3AF, Metasploit Framework, among others and custom plugins to perform pentesting activities.
Read more about the development and usage of plugins in Tortazo :ref:`plugins-management-label`
