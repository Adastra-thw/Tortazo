.. _database-mode-label:

****************************************************
Repository mode in Tortazo
****************************************************

=================
Generation of onion addresses in Tor.
=================
Every hidden service in TOR is identified by an address which is used by the user to access to the service. These addresses are not easy to remember just like the addresses in Internet, are values of a fixed size (16 chars) and are automatically generated by TOR when you use the configuration options "HiddenServiceDir" and "HiddenServicePort" in your torrc configuration file.
TOR uses public key cryptography to generate a private key for the hidden service. TOR generates an RSA-1024 keypair, the public key is calculated and then, uses SHA over the public key to generate a hash. Finally, the first half of this hash is encoded using Base32, so the Onion addresses can only contain the digits between 2 and 7 and the letters between “a” and “z”. 
This means that you have 32 possible values for every char in the onion address, which, as I said before, has a length of 16 characters.

=================
Problem: A LIST HUGE, VERY, VERY HUGE OF POSSIBLE COMBINATIONS!
=================
32^16 is a very huge value and this is the number of possible combinations to generate the full space of onion address. The amount of memory and processing power is simply 